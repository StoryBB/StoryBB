		{{! Displaying character topics in a holistic way.}}
		<div class="cat_bar">
			<h3 class="catbg">
				{{{context.page_title}}}
			</h3>
		</div>

		<div class="windowbg" id="topic_filter" style="display:none">
			<div class="half_content">
				<label><input type="checkbox" name="locked"> {{{txt.topic_tracker_locked_topics}}}</label><br>
				<label><input type="checkbox" name="finished"> {{{txt.topic_tracker_finished_topics}}}</label><br>
				<label><input type="checkbox" name="unread" checked> {{{txt.topic_tracker_unread_topics}}}</label><br>
				<label><input type="checkbox" name="nounread" checked> {{{txt.topic_tracker_read_topics}}}</label><br>
				<br>
				<label><input type="checkbox" name="lastme" checked> {{{txt.topic_tracker_lastme}}}</label><br>
				<label><input type="checkbox" name="lastnotme" checked> {{{txt.topic_tracker_lastnotme}}}</label><br>
				<br>
				<label><input type="checkbox" name="postedtopic" checked> {{{txt.topic_tracker_posted}}}</label><br>
				<label><input type="checkbox" name="invitedtopic" checked> {{{txt.topic_tracker_invited}}}</label><br>
			</div>
			<div class="half_content">
				<strong>{{{txt.topic_tracker_last_post}}}</strong><br>
{{#each context.time_ago_options}}
				<label><input type="checkbox" name="lp-{{@key}}" checked> {{{this.label}}}</label><br>
{{/each}}
			</div>
		</div>
		<div class="topic-list topic-tracker">
{{#each context.user.characters}}
	{{#if (and (eq_coerce is_main '0') (eq_coerce retired '0'))}}
			<div class="character">
				<div class="title_bar">
					<h3 class="titlebg">{{{character_name}}}</h3>
				</div>
		{{#if topics}}
			{{#each topics}}
				{{> topic_display_ic txt=../../txt context=../../context scripturl=../../scripturl}}
			{{/each}}
		{{else}}
				<div class="roundframe centertext">
					{{{../txt.topic_tracker_no_topics}}}
				</div>
		{{/if}}
			</div>
			<br>
	{{/if}}
{{/each}}
		</div>

<script>
	function topic_filter() {
		var no_replies = {{{json txt.topic_tracker_no_topics}}};

		var filters = {
			locked: $('#topic_filter input[name="locked"]').prop('checked'),
			finished: $('#topic_filter input[name="finished"]').prop('checked'),
			unread: $('#topic_filter input[name="unread"]').prop('checked'),
			nounread: $('#topic_filter input[name="nounread"]').prop('checked'),
			lastme: $('#topic_filter input[name="lastme"]').prop('checked'),
			lastnotme: $('#topic_filter input[name="lastnotme"]').prop('checked'),
			postedtopic: $('#topic_filter input[name="postedtopic"]').prop('checked'),
			invitedtopic: $('#topic_filter input[name="invitedtopic"]').prop('checked')
		};
		var time_ago_filters = {{{json context.time_ago_options}}};
		for (key in time_ago_filters) {
			if (time_ago_filters.hasOwnProperty(key)) {
				filters['lp-' + key] = $('#topic_filter input[name="lp-' + key + '"]').prop('checked');
			}
		}

		try {
			window.localStorage.setItem('topic_tracker_filter', JSON.stringify(filters));
		} catch (e) {
			// Do nothing - this can fail e.g. Mobile Safari in private browsing.
		}

		$('.topic-list .character').each(function () {
			$(this).find('div.roundframe.centertext').remove();

			$(this).find('.windowbg').show();
			for (key in filters) {
				if (filters.hasOwnProperty(key)) {
					if (!filters[key]) {
						$(this).find('.' + key).hide();
					}
				}
			}

			if ($(this).find('.windowbg:visible').length == 0) {
				$(this).append('<div class="roundframe centertext">' + no_replies + '</div>');
			} else {
				$(this).find('.windowbg:visible').removeClass('odd even');
				$(this).find('.windowbg:visible:even').addClass('even');
				$(this).find('.windowbg:visible:odd').addClass('odd');
			}
		});
	}

	try {
		var filters = window.localStorage.getItem('topic_tracker_filter');
		if (filters && (filters = JSON.parse(filters))) {
			for (key in filters) {
				if (filters.hasOwnProperty(key)) {
					$('#topic_filter input[name="' + key + '"]').prop('checked', filters[key]);
				}
			}
		}
	} catch (e) {
		// If this fails, it doesn't matter, we'll just use whatever defaults there are.
	}

	$('#topic_filter').show();
	$('#topic_filter input').on('click', topic_filter);
	topic_filter();
</script>