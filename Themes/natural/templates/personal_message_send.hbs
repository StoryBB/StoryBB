{{#if context.send_log}}
	<div class="cat_bar">
		<h3 class="catbg">{{txt.pm_send_report}}</h3>
	</div>
	<div class="windowbg">
		{{#each context.send_log.sent}}<span class="error">{{{.}}}</span><br>{{/each}}
		{{#each context.send_log.failed}}<span class="error">{{{.}}}</span><br>{{/each}}
	</div><br>
{{/if}}

	<div id="preview_section" {{#unless context.preview_message}} style="display: none;"{{/unless}}>
		<div class="cat_bar">
			<h3 class="catbg">
				<span id="preview_subject">{{{context.preview_subject}}}</span>
			</h3>
		</div>
		<div class="windowbg noup">
			<div class="post" id="preview_body">
				{{#if context.preview_message}}{{{context.preview_message}}}{{else}}<br>{{/if}}
			</div>
		</div>
		<br class="clear">
	</div>
	<div class="cat_bar">
		<h3 class="catbg">
			{{txt.new_message}}
		</h3>
	</div>
	<form action="{{scripturl}}?action=pm;sa=send" method="post" accept-charset="UTF-8" name="postmodify" id="postmodify" class="flow_hidden" onsubmit="submitonce(this);">
		<div class="roundframe noup">
			<br class="clear">
			<div class="{{#if (eq context.error_type 'serious')}}errorbox{{else}}noticebox{{/if}}"{{#unless cntext.post_error.messages}} style="display: none"{{/unless}} id="errors">
				<dl>
					<dt>
						<strong id="error_serious">{{txt.error_while_submitting}}</strong>
					</dt>
					<dd class="error" id="error_list">
						{{#if context.post_error.messages}}{{implode context.post_error.messages '<br>'}}{{/if}}
					</dd>
				</dl>
			</div>

{{#if modSettings.drafts_pm_enabled}}
			<div id="draft_section" class="infobox"{{#unless context.draft_saved}} style="display: none;"{{/unless}}>
				{{textTemplate txt.draft_pm_saved (concat scripturl '?action=pm;sa=drafts')}}
				{{#if (gt modSettings.drafts_keep_days 0)}}<strong>{{textTemplate txt.draft_save_warning modSettings.drafts_keep_days}}</strong>{{/if}}
			</div>
{{/if}}

			<dl id="post_header">
				<dt>
					<span{{#if (or context.post_error.no_to context.post_error.bad_to)}} class="error"{{/if}} id="caption_to">{{txt.pm_to}}:</span>
				</dt>
				<dd id="pm_to" class="clear_right">
					<select multiple id="to" name="recipient_to[]"></select>
				</dd>
				<dt class="clear_left">
					<span{{#if context.post_error.no_subject}} class="error"{{/if}} id="caption_subject">{{{txt.subject}}}:</span>
				</dt>
				<dd id="pm_subject">
					<input type="text" name="subject" value="{{{context.subject}}}" size="80" maxlength="80"{{#if context.post_error.no_subject}} class="error"{{/if}}>
				</dd>
			</dl>
			<hr>

{{#if context.show_bbc}}
			<div id="bbcBox_message"></div>
{{/if}}

{{#if (or context.smileys.posftform context.smileys.popup)}}
			<div id="smileyBox_message"></div>
{{/if}}

			{{{richtexteditor context.post_box_name 'smileyBox_message' 'bbcBox_message'}}}

{{#if context.require_verification}}
			<div class="post_verification">
				<strong>{{txt.pm_visual_verification_label}}:</strong>
				{{{verification context.visual_verification}}}
			</div>
{{/if}}

			<hr>
			<span id="post_confirm_buttons" class="buttonlist righttext">
				{{{richtextbuttons context.post_box_name}}}
			</span>
			{{session_form}}
			<input type="hidden" name="seqnum" value="{{context.form_sequence_number}}">
			<input type="hidden" name="replied_to" value="{{#if context.quoted_message.id}}{{context.quoted_message.id}}{{else}}0{{/if}}">
			<input type="hidden" name="pm_head" value="{{#if context.quoted_message.pm_head}}{{context.quoted_message.pm_head}}{{else}}0{{/if}}">
			<input type="hidden" name="f" value="{{context.folder}}">
			<input type="hidden" name="l" value="{{#if context.current_label_id}}{{context.current_label_id}}{{else}}-1{{/if}}">
			<br class="clear_right">
		</div>
	</form>

{{#if (and context.drafts_pm_save context.drafts)}}
	<br>
	<div id="postDraftOptionsHeader" class="cat_bar">
		<h3 class="catbg">
			<span id="postDraftExpand" class="toggle_up floatright" style="display: none;"></span> <strong><a href="#" id="postDraftExpandLink">{{txt.draft_load}}</a></strong>
		</h3>
	</div>
	<div id="postDraftOptions" class="load_drafts padding">
		<dl class="settings">
			<dt><strong>{{txt.subject}}</strong></dt>
			<dd><strong>{{txt.draft_saved_on}}</strong></dd>

	{{#each context.drafts}}
			<dt>{{{link}}}</dt>
			<dd>{{{poster_time}}}</dd>
	{{/each}}

		</dl>
	</div>
{{/if}}

	<script>
	var txt_preview_title = "{{txt.preview_title}}";
		var txt_preview_fetch = "{{txt.preview_fetch}}";
		function previewPost()
		{
			if (window.XMLHttpRequest)
			{
				// Opera didn't support setRequestHeader() before 8.01.
				// @todo Remove support for old browsers
				if ('opera' in window)
				{
					var test = new XMLHttpRequest();
					if (!('setRequestHeader' in test))
						return submitThisOnce(document.forms.postmodify);
				}
				// @todo Currently not sending poll options and option checkboxes.
				var x = new Array();
				var textFields = ['subject', '{{context.post_box_name}}'];
				var numericFields = [];
				var multiselectFields = ['recipient_to[]'];
				var checkboxFields = [];

				for (var i = 0, n = textFields.length; i < n; i++)
					if (textFields[i] in document.forms.postmodify)
					{
						// Handle the WYSIWYG editor.
						if (textFields[i] == '{{context.post_box_name}}' && 'oEditorHandle_{{context.post_box_name}}' in window && oEditorHandle_{{context.post_box_name}}.bRichTextEnabled)
							x[x.length] = 'message_mode=1&' + textFields[i] + '=' + oEditorHandle_{{context.post_box_name}}.getText(false).replace(/&#/g, '&#38;#');
						else
							x[x.length] = textFields[i] + '=' + document.forms.postmodify[textFields[i]].value.replace(/&#/g, '&#38;#');
					}
				for (var i = 0, n = numericFields.length; i < n; i++)
					if (numericFields[i] in document.forms.postmodify && 'value' in document.forms.postmodify[numericFields[i]])
						x[x.length] = numericFields[i] + '=' + parseInt(document.forms.postmodify.elements[numericFields[i]].value);
				for (var i = 0, n = checkboxFields.length; i < n; i++)
					if (checkboxFields[i] in document.forms.postmodify && document.forms.postmodify.elements[checkboxFields[i]].checked)
						x[x.length] = checkboxFields[i] + '=' + document.forms.postmodify.elements[checkboxFields[i]].value;
				for (var i = 0, n = multiselectFields.length; i < n; i++)
					if (multiselectFields[i] in document.forms.postmodify)
					{
						var opts = document.forms.postmodify.elements[multiselectFields[i]].options;
						for (j = 0, nj = opts.length; j < nj; j++)
						{
							if (opts[j].selected)
							{
								x[x.length] = multiselectFields[i] + '=' + opts[j].value;
							}
						}
					}

				x[x.length] = sbb_session_var + '=' + sbb_session_id;

				sendXMLDocument(sbb_prepareScriptUrl(sbb_scripturl) + 'action=pm;sa=send;preview;xml', x.join('&'), onDocSent);

				document.getElementById('preview_section').style.display = '';
				setInnerHTML(document.getElementById('preview_subject'), txt_preview_title);
				setInnerHTML(document.getElementById('preview_body'), txt_preview_fetch);

				return false;
			}
			else
				return submitThisOnce(document.forms.postmodify);
		}
		function onDocSent(XMLDoc)
		{
			if (!XMLDoc)
			{
				document.forms.postmodify.preview.onclick = new function ()
				{
					return true;
				}
				document.forms.postmodify.preview.click();
			}

			// Show the preview section.
			var preview = XMLDoc.getElementsByTagName('storybb')[0].getElementsByTagName('preview')[0];
			setInnerHTML(document.getElementById('preview_subject'), preview.getElementsByTagName('subject')[0].firstChild.nodeValue);

			var bodyText = '';
			for (var i = 0, n = preview.getElementsByTagName('body')[0].childNodes.length; i < n; i++)
				bodyText += preview.getElementsByTagName('body')[0].childNodes[i].nodeValue;

			setInnerHTML(document.getElementById('preview_body'), bodyText);
			document.getElementById('preview_body').className = 'post';

			// Show a list of errors (if any).
			var errors = XMLDoc.getElementsByTagName('storybb')[0].getElementsByTagName('errors')[0];
			var errorList = new Array();
			for (var i = 0, numErrors = errors.getElementsByTagName('error').length; i < numErrors; i++)
				errorList[errorList.length] = errors.getElementsByTagName('error')[i].firstChild.nodeValue;
			document.getElementById('errors').style.display = numErrors == 0 ? 'none' : '';
			setInnerHTML(document.getElementById('error_list'), numErrors == 0 ? '' : errorList.join('<br>'));

			// Adjust the color of captions if the given data is erroneous.
			var captions = errors.getElementsByTagName('caption');
			for (var i = 0, numCaptions = errors.getElementsByTagName('caption').length; i < numCaptions; i++)
				if (document.getElementById('caption_' + captions[i].getAttribute('name')))
					document.getElementById('caption_' + captions[i].getAttribute('name')).className = captions[i].getAttribute('class');

			if (errors.getElementsByTagName('post_error').length == 1)
				document.forms.postmodify.{{context.post_box_name}}.style.border = '1px solid red';
			else if (document.forms.postmodify.{{context.post_box_name}}.style.borderColor == 'red' || document.forms.postmodify.{{context.post_box_name}}.style.borderColor == 'red red red red')
			{
				if ('runtimeStyle' in document.forms.postmodify.{{context.post_box_name}})
					document.forms.postmodify.{{context.post_box_name}}.style.borderColor = '';
				else
					document.forms.postmodify.{{context.post_box_name}}.style.border = null;
			}
			location.hash = '#' + 'preview_section';
		}

{{#if context.drafts}}
		var oSwapDraftOptions = new smc_Toggle({
			bToggleEnabled: true,
			bCurrentlyCollapsed: true,
			aSwappableContainers: [
				'#postDraftOptions',
			],
			aSwapImages: [
				{
					sId: '#postDraftExpand',
					altExpanded: '-',
					altCollapsed: '+'
				}
			],
			aSwapLinks: [
				{
					sId: '#postDraftExpandLink',
					msgExpanded: {{{json txt.draft_hide}}},
					msgCollapsed: {{{json txt.draft_load}}}
				}
			]
		});
{{/if}}

	</script>

{{#if context.reply}}
	<br>
	<br>
	<div class="cat_bar">
		<h3 class="catbg">{{{txt.subject}}}: {{{context.quoted_message.subject}}}</h3>
	</div>
	<div class="windowbg">
		<div class="clear">
			<span class="smalltext floatright">{{{txt.on}}}: {{{context.quoted_message.time}}}</span>
			<strong>{{{txt.from}}}: {{{context.quoted_message.member.name}}}</strong>
		</div>
		<hr>
		{{{context.quoted_message.body}}}
	</div>
	<br class="clear">
{{/if}}
